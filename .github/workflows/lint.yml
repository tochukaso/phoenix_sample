---

name: lint

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@master
      - name: Install mdl
        run: |
          sudo apt-get update \
              && sudo apt-get install -y rubygems \
              && sudo gem install mdl
      - name: Lint Markdown files
        run: |
          mdl $(find . -type f \
              \( -name "*.md" -o -name "*.markdown" \) \
              )
      - name: Lint Shell Scripts
        run: |
          whoopsie() {
              echo "$1" >&2
              exit "${2:-192}"
          }
          export SHELL_SCRIPTS_FOUND=$(find . \
              -type f \
              -name "*.sh" \
          )
          [[ -z "${SHELL_SCRIPTS_FOUND}" ]] \
              && whoopsie "No shell scripts to lint. Moving on..." 0
          echo "${SHELL_SCRIPTS_FOUND}" \
              | xargs shellcheck
          echo "${SHELL_SCRIPTS_FOUND}" \
              | xargs head -n 1 \
              | grep --quiet '^#!/bin/bash$' \
              || whoopsie 'Wrong interpreter'
          echo "${SHELL_SCRIPTS_FOUND}" \
              | xargs tail -n 1 \
              | grep --quiet '^exit\ 0$' \
              || whoopsie 'Scripts should end in `exit 0`'
          # macOSでは `ggrep` (`brew install grep` 後に使える)
          export PASSED_COUNT=$(echo "${SHELL_SCRIPTS_FOUND}" \
              | xargs grep --extended-regexp \
                  --file "${GITHUB_WORKSPACE}/.sh_requirements" \
                  | wc -l \
                  | tr -d ' '
          )
          echo "Format passed: ${PASSED_COUNT}"
          export NUMBER_OF_CUSTOM_RULES=$(
              wc -l < "${GITHUB_WORKSPACE}/.sh_requirements" \
                  | tr -d ' '
          )
          if (( "${PASSED_COUNT}" % "${NUMBER_OF_CUSTOM_RULES}" != 0 )); then
              whoopsie 'Required format unsatisfied'
          fi

      - name: yarn install
        run: yarn install

      - name: yarn 
        run: yarn add eslint

      - name: Lint JavaScript files
        run: yarn eslint "lambda-functions/lib/**/*.js"
        if: always()

      - name: Lint JSON files
        run: |
          find . \
              -type f \
              -name "*.json" \
              -print0 \
              | xargs -n 1 -0 \
                  jsonlint --quiet --compact
